description: GeoBalance on Chameleon

heat_template_version: 2015-10-15

resources:
  geobalance_master_node:
    type: OS::Nova::Server
    properties:
      name: geobalance_master_node
      flavor: baremetal
      image: { get_param: geobalance_image_name}
      key_name: { get_param: key_name }
      networks:
        - network: sharednet1
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data: |
        #!/bin/bash
        sudo service zookeeper-server start

  geobalance_data_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: data_nodes_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          name: geobalance_data_node_%index%
          flavor: baremetal
          image: { get_param: geobalance_image_name}
          key_name: { get_param: key_name }
          networks:
            - network: sharednet1
          scheduler_hints: { reservation: { get_param: reservation_id } }
          user_data:
            str_replace:
              template: |
                #!/bin/bash                
                echo "$master_ip" > /tmp/masterip.txt
              params:
                $master_ip: { get_attr: [geobalance_master_node, first_address] }
  
  geobalance_broker_master_node:
    type: OS::Nova::Server
    properties:
      name: geobalance_broker_master_node
      flavor: baremetal
      image: { get_param: geobalance_image_name}
      key_name: { get_param: key_name }
      networks:
        - network: sharednet1
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data: |
        #!/bin/bash
        docker run -d --hostname my-rabbit --name geobalance-rabbit -p 5672:5672 -p 15672:15672 rabbitmq:latest
        docker run -d -p 80:80 --env HOSTIP=$(hostname -I | cut -d' ' -f1) geobalance-brokernode-manager
  
  geobalance_broker_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: broker_nodes_count }
      resource_def:
        type: OS::Nova::Server
        properties:
          name: geobalance_broker_node_%index%
          flavor: baremetal
          image: { get_param: geobalance_image_name}
          key_name: { get_param: key_name }
          networks:
            - network: sharednet1
          scheduler_hints: { reservation: { get_param: reservation_id } }
          user_data:
            str_replace:
              template: |
                #!/bin/bash                
                echo "$master_ip" > /tmp/masterip.txt
                echo "$broker_master_ip" > /tmp/brokermasterip.txt
                
                datanodeips=$(echo "$datanode_ips" | sed 's/[][]//g')
                datanodeips=$(echo $datanodeips | tr -d ' ')
                
              params:
                $datanode_ips: { get_attr: [geobalance_data_nodes, first_address] }
                $master_ip: { get_attr: [geobalance_master_node, first_address] }
                $broker_master_ip: { get_attr: [geobalance_broker_master_node, first_address] }
  
  geobalance_monitor_node:
    type: OS::Nova::Server
    properties:
      name: geobalance_monitor_node
      flavor: baremetal
      image: { get_param: geobalance_image_name}
      key_name: { get_param: key_name }
      networks:
        - network: sharednet1
      scheduler_hints: { reservation: { get_param: reservation_id } }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash
            datanodeips=$(echo "$datanode_ips" | sed 's/[][]//g')
            datanodeips=$(echo $datanodeips | tr -d ' ')
            echo "$datanodeips" > /tmp/datanodeips.txt
            
            brokernodeips=$(echo "$brokernode_ips" | sed 's/[][]//g')
            brokernodeips=$(echo $brokernodeips | tr -d ' ')
            echo "$brokernodeips" > /tmp/brokernodeips.txt
            
            echo "$master_ip" > /tmp/masterip.txt
            echo "$broker_master_ip" > /tmp/brokermasterip.txt
            
          params:
            $datanode_ips: { get_attr: [geobalance_data_nodes, first_address] }
            $brokernode_ips: { get_attr: [geobalance_broker_nodes, first_address] }
            $master_ip: { get_attr: [geobalance_master_node, first_address] }
            $broker_master_ip: { get_attr: [geobalance_broker_master_node, first_address] }
      
  geobalance_broker_master_node_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: public

  geobalance_broker_master_node_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: geobalance_broker_master_node_floating_ip }
      server_id: { get_resource: geobalance_broker_master_node }

# The parameters section gathers configuration from the user.
parameters:
  data_nodes_count:
    type: number
    description: Number of data instances
    default: 2
    constraints:
      - range: { min: 1 }
        description: There must be at least one data node.
  broker_nodes_count:
    type: number
    description: Number of broker instances
    default: 2
    constraints:
      - range: { min: 1 }
        description: There must be at least one broker node.
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: default
    constraints:
    - custom_constraint: nova.keypair
  reservation_id:
    type: string
    description: ID of the Blazar reservation to use for launching instances.
    constraints:
    - custom_constraint: blazar.reservation
  geobalance_image_name:
    type: string
    description: Name of the GeoBalance image
    
outputs:
  broker_master_floating_ip:
    description: Public IP address of broker master node
    value: { get_attr: [geobalance_broker_master_node_floating_ip, ip] }